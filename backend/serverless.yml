service: skills-matrix-backend

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  versionFunctions: false
  memorySize: 128
  region: us-east-1
  logRetentionInDays: 30
  stage: ${opt:stage, 'dev'}
  environment:
    TABLENAME: ${opt:stage, self:provider.stage}-SkillsTable
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt:
          - SkillsTable
          - Arn

functions:
  skillsList:
    handler: lambda/skillsList.skillsList
    name: ${self:provider.stage}-skillsList
    description: 'CRUD function for skills in the table, ${self:provider.environment.TABLENAME}'
    events:
      - http:
          path: /skillslist
          method: get
          cors: true
      - http:
          path: /skillslist
          method: post
          cors: true
      - http:
          path: /skillslist/{skillName}
          method: patch
          cors: true
      - http:
          path: /skillslist/{skillName}
          method: delete
          cors: true

resources:
  Resources:
    SkillsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLENAME}
        AttributeDefinitions:
          - AttributeName: skillName
            AttributeType: S
        KeySchema:
          - AttributeName: skillName
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
