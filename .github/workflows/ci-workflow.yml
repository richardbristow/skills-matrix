name: CI workflow

on: [push, pull_request]

jobs:
  test:
    name: Node ${{ matrix.node-version }} - lint, test, build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: node --version
      - run: yarn --version

      - run: yarn install

      - run: yarn lint

      - name: yarn test
        env:
          CI: true
        run: yarn test --coverage

      - run: yarn build

  deploy_netlify:
    name: deploy to netlify
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - run: node --version
      - run: yarn --version
      - run: netlify --version
      - run: yarn install

      - name: 'PROD: yarn build:prod'
        if: github.ref == 'refs/heads/main'
        env:
          REACT_APP_COGNITO_IDENTITY_POOL_ID: ${{ secrets.REACT_APP_COGNITO_IDENTITY_POOL_ID }}
          REACT_APP_AWS_REGION: ${{ secrets.REACT_APP_AWS_REGION }}
          REACT_APP_COGNITO_USER_POOL_ID: ${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }}
          REACT_APP_COGNITO_USER_POOL_WEB_CLIENT_ID: ${{ secrets.REACT_APP_COGNITO_USER_POOL_WEB_CLIENT_ID }}
          REACT_APP_DEV_API_URL: ${{ secrets.REACT_APP_DEV_API_URL }}
          REACT_APP_PROD_API_URL: ${{ secrets.REACT_APP_PROD_API_URL }}
          REACT_APP_COGNITO_ADMIN_AWS_ACCESS_KEY_ID: ${{ secrets.REACT_APP_COGNITO_ADMIN_AWS_ACCESS_KEY_ID }}
          REACT_APP_COGNITO_ADMIN_AWS_SECRET_KEY: ${{ secrets.REACT_APP_COGNITO_ADMIN_AWS_SECRET_KEY }}
        run: yarn build:prod

      - name: 'DEV: yarn build'
        if: github.ref == 'refs/heads/develop'
        env:
          REACT_APP_COGNITO_IDENTITY_POOL_ID: ${{ secrets.REACT_APP_COGNITO_IDENTITY_POOL_ID }}
          REACT_APP_AWS_REGION: ${{ secrets.REACT_APP_AWS_REGION }}
          REACT_APP_COGNITO_USER_POOL_ID: ${{ secrets.REACT_APP_COGNITO_USER_POOL_ID }}
          REACT_APP_COGNITO_USER_POOL_WEB_CLIENT_ID: ${{ secrets.REACT_APP_COGNITO_USER_POOL_WEB_CLIENT_ID }}
          REACT_APP_DEV_API_URL: ${{ secrets.REACT_APP_DEV_API_URL }}
          REACT_APP_PROD_API_URL: ${{ secrets.REACT_APP_PROD_API_URL }}
          REACT_APP_COGNITO_ADMIN_AWS_ACCESS_KEY_ID: ${{ secrets.REACT_APP_COGNITO_ADMIN_AWS_ACCESS_KEY_ID }}
          REACT_APP_COGNITO_ADMIN_AWS_SECRET_KEY: ${{ secrets.REACT_APP_COGNITO_ADMIN_AWS_SECRET_KEY }}
        run: yarn build

      - name: 'PROD: deploy to netlify'
        if: github.ref == 'refs/heads/main'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --prod

      - name: 'DEV: deploy to netlify'
        if: github.ref == 'refs/heads/develop'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy

  serverless_deploy_aws:
    name: serverless deploy to AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v3
        with:
          node-version: 14.x

      - name: install serverless
        run: npm install serverless -g
      - run: node --version
      - run: yarn --version
      - run: serverless --version
      - run: yarn install

      - name: 'PROD: serverless deploy to AWS'
        if: github.ref == 'refs/heads/main'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd backend
          serverless deploy --stage prod -v --conceal

      - name: 'DEV: serverless deploy to AWS'
        if: github.ref == 'refs/heads/develop'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd backend
          serverless deploy -v --conceal
